version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db:
    image: postgres:latest
    container_name: imageservice-postgres-db
    env_file:
      - .env.dev
    ports:
      - '5432:5432'
    restart: on-failure
    volumes:
      - postgres-db:/var/lib/postgresql/data
  upload:
    image: upload_service
    container_name: upload_service
    build:
      context: ./imageservice/upload
      dockerfile: dockerfile
    env_file:
      - .env
    ports:
      - 5000:5000
    volumes:
      - ./imageservice/upload:/app
    depends_on:
      - kafka
      - db
  dither:
    image: dither_service
    container_name: dither_service
    build:
      context: ./imageservice/dither
      dockerfile: dockerfile
    env_file:
      - .env
    ports:
      - 5001:5000
    volumes:
      - ./imageservice/dither:/app
    depends_on:
      - kafka
  dither-consumer:
    image: dither_consumer
    container_name: dither_consumer
    build:
      context: ./imageservice/dither
      dockerfile: dockerfileConsumer
    env_file:
      - .env
    volumes:
      - ./imageservice/dither:/app
    depends_on:
      - kafka
  upload-consumer:
    image: upload_consumer
    container_name: upload_consumer
    build:
      context: ./imageservice/upload
      dockerfile: dockerfileConsumer
    env_file:
      - .env
    volumes:
      - ./imageservice/upload:/app
    depends_on:
      - kafka
volumes:
  postgres-db:
